<project name="FluidEngage" default="releaseBuild" basedir=".">
    <description>
      Build a distributable package of Fluid Engage.
    </description>

    <property file="build.properties"/>
        
    <!-- Target: cleanup before running - identical to Infusion ant task -->
    <target name="clean" description="Cleans up all build-related artifacts and products.">
        <delete dir="${build}" />
        <delete dir="${products}" />
    </target>
  
    <!-- Set up the build directory structure - identical to Infusion ant task -->
    <target name="init">
        <mkdir dir="${products}" />
        <mkdir dir="${build}" />
        <mkdir dir="${build-webapp}" />
        <mkdir dir="${build-webapp}/infusion" />
        <mkdir dir="${build-webapp}/engage-client" />
        <mkdir dir="${build-java}" />
        <mkdir dir="${dist}" />
        <mkdir dir="${src-dist}" />
        <mkdir dir="${licenses}" />
    </target>

    <target name="infusionBuild">
        <ant dir="${infusion-scripts}" target="customBuild" inheritAll="false" />
        
        <copy todir="${build-webapp}/infusion" >
            <fileset dir="${infusion-dist}">
                <exclude name="**/*.war" />
            </fileset>
        </copy>
    </target>
    
    <target name="engageClientBuild">
        <copy todir="${build-webapp}/engage-client/components">
            <fileset dir="${engage-client}/components"></fileset>
        </copy>        
    </target>

    <target name="engageServerBuild">
        <copy todir="${build-webapp}">
            <fileset dir="${src}/webapp">
                <include name="kettle/*" />
                <include name="artifactDemo/*" />
                <include name="WEB-INF/*" />
            </fileset>
        </copy>        
        <copy todir="${build-java}">
            <fileset dir="${src}/java"></fileset>
        </copy> 
    </target>
    
    <target name="copyToBundles">        
        <copy todir="${src-dist}">
            <fileset dir="${build}" />
        </copy>

        <copy todir="${dist}">
            <fileset dir="${build}" />
        </copy>
    </target>

    <!-- Copies the files required to build a war file -->
    <target name="copyWARFiles">        
      <copy todir="${build}/war" >
        <fileset dir="${dist}"></fileset>
        <fileset dir="${base-dir}">
            <include name="pom.xml" />
        </fileset>
      </copy>
    </target>
    
    <!-- Builds the WAR file using Maven 2 and copies it to the distribution folder. identical to infusion build-->
    <target name="buildWAR">
      <condition property="isWindows">
        <os family="windows" />
      </condition>
      <antcall target="invokeMavenForWAR"/>
      <antcall target="invokeMavenForWARWindows"/>
      <echo>Copying war file ...</echo>
      <copy todir="${dist}">
          <fileset dir="${build}/war/target">
              <include name="${warfile}" />
          </fileset>
      </copy>
    </target>
  
    <!-- identical to infusion build -->
    <target name="invokeMavenForWAR" unless="isWindows">
      <echo>Building war file...</echo>
      <apply executable="mvn" dir="${build}/war" parallel="true">
          <fileset  dir=".">
              <include name="pom.xml"/>
          </fileset>
          <arg value="install" />
      </apply>
    </target>
  
    <!-- identical to infusion build -->
    <target name="invokeMavenForWARWindows" if="isWindows">
      <apply executable="cmd" dir="${build}/war" parallel="true" vmlauncher="false">
          <fileset  dir=".">
              <include name="pom.xml"/>
          </fileset>
          <arg value="/c mvn.bat install" />
      </apply>
    </target>
    
    <target name="distWAR" depends="copyWARFiles, buildWAR">
    </target>

    <target name="releaseBuild" depends="clean, init, infusionBuild, engageClientBuild, engageServerBuild, copyToBundles, distWAR" 
        description="Builds and packages a release bundle of Engage.">
    </target>
        
</project>
